/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export default function Model({ ...props }) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/galaxy.glb");
  const { actions } = useAnimations(animations, group);
  const galaxyRef = useRef(null);

  useFrame(() => {
    galaxyRef.current.rotation.y = galaxyRef.current.rotation.y += 0.001;
  });

  return (
    <group ref={galaxyRef} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={[0.06, 0.06, 0.06]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group rotation={[-Math.PI / 2, 0, 0]}>
            <mesh
              geometry={nodes["Galaxy_Material_#65_0"].geometry}
              material={materials.Material_65}
            />
          </group>
          <group name="Sphere001" rotation={[-Math.PI / 2, 0, 0]}>
            <mesh
              geometry={nodes["Sphere001_02_-_Default_0"].geometry}
              material={materials["02_-_Default"]}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/galaxy.glb");
